"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[587],{38948:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>m,contentTitle:()=>g,default:()=>v,frontMatter:()=>f,metadata:()=>s,toc:()=>b});const s=JSON.parse('{"id":"openapi/get-authorization-status","title":"Get authorization session status","description":"Checks the current status of an Authorization Request session. Can optionally include verified credential data","source":"@site/docs/openapi/get-authorization-status.api.mdx","sourceDirName":"openapi","slug":"/openapi/get-authorization-status","permalink":"/universal-oid4vp/docs/openapi/get-authorization-status","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-authorization-status","title":"Get authorization session status","description":"Checks the current status of an Authorization Request session. Can optionally include verified credential data","sidebar_label":"Get authorization session status","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/openapi/universal-oid-4-vp","custom_edit_url":null},"sidebar":"docs","previous":{"title":"Remove authorization request state","permalink":"/universal-oid4vp/docs/openapi/delete-authorization-request"},"next":{"title":"CreateAuthorizationRequest","permalink":"/universal-oid4vp/docs/openapi/schemas/createauthorizationrequest"}}');var r=i(74848),n=i(28453),a=i(33617),o=i.n(a),d=i(17543),p=i.n(d),l=i(86013),u=i.n(l),c=i(63723),h=i.n(c),y=(i(18766),i(79329),i(9303));const f={id:"get-authorization-status",title:"Get authorization session status",description:"Checks the current status of an Authorization Request session. Can optionally include verified credential data",sidebar_label:"Get authorization session status",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/openapi/universal-oid-4-vp",custom_edit_url:null},g=void 0,m={},b=[];function j(e){const t={p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"Get authorization session status"}),"\n",(0,r.jsx)(o(),{method:"post",path:"/oid4vp/backend/auth/status",context:"endpoint"}),"\n",(0,r.jsx)(t.p,{children:"Checks the current status of an Authorization Request session. Can optionally include verified credential data\nin the response when the status is 'verified'. Although the correlationId should be the only one strictly necesary we require both the queryId and correlationId, to keep the create response and auth request symmetrical and to not assume global sessions accross different queryIds in RP implementations."}),"\n",(0,r.jsx)(y.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,r.jsx)(p(),{parameters:void 0}),"\n",(0,r.jsx)(u(),{title:"Body",body:{description:"Request for current status of the session",content:{"application/json":{schema:{type:"object",required:["correlation_id","query_id"],properties:{correlation_id:{type:"string",description:"Unique identifier for the session",example:"2cc29d1c-7d00-46f8-b0ae-b4779d2ff143"},query_id:{type:"string",description:"Identifier for the presentation definition that specifies which credentials are required",example:"PensionSdJwt"},verified_data:{type:"object",properties:{modes:{type:"array",items:{type:"string",description:"The way verified data will be represented. Either the full Authorization Response, vp_tokens, or claims from digital credentials deserialized into JSON objects. The latter is the most easy representation for external apps integrating with this API as thye do not have to perform additional actions, nor have knowledge about the internal of vp_tokens and auth responses.",enum:["authorization_response","vp_token","credential_claims_deserialized"],title:"VerifiedDataMode"}}},description:"Controls what verified data to include in the response. Only applies when status is 'authorization_response_verified'. Either nothing (omit), or a combination of the vp_tokens and credential data deserialized (credentials_deserialized), depedning on the modes selected",example:["vp_token","credentials_deserialized"]}},title:"AuthorizationStatusRequest"},examples:{"Get status":{value:{correlation_id:"my-business-key-or-uuid",query_id:"example-dcql-id"}}}}}}}),"\n",(0,r.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"Authorization status retrieved successfully",content:{"application/json":{schema:{type:"object",required:["status","query_id","correlation_id","definition_id","last_updated"],properties:{status:{type:"string",enum:["authorization_request_created","authorization_request_retrieved","authorization_response_received","authorization_response_verified","error"],title:"AuthorizationStatus"},correlation_id:{type:"string",description:"Unique identifier for the authentication session",example:"2cc29d1c-7d00-46f8-b0ae-b4779d2ff143"},error:{type:"object",description:"Error details returned when an operation fails",properties:{status:{type:"integer",description:"HTTP status code",example:500},message:{type:"string",description:"Human-readable error message",example:"Could not verify auth status"},error_details:{type:"string",description:"Additional error details or stack trace when available"}},required:["status","message"],title:"Error"},query_id:{description:"Identifier for the presentation definition that specifies which credentials are required",example:"PensionSdJwt",type:"string"},last_updated:{type:"integer",description:"Unix timestamp in milliseconds representing when the status was last updated",example:17065152e5},verified_data:{type:"object",description:"This object is only included in case the authorization status is 'authorization_response_verified'",properties:{authorization_response:{type:"object",properties:{presentation_submission:{type:"object",description:"Object containing information about how the presented credentials fulfill the presentation definition requirements. Only if PE is used!"},vp_token:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"},{type:"array",items:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"}]},title:"MultipleVpTokens"},{type:"object",additionalProperties:{type:"array",items:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"}]},title:"MultipleVpTokens"},title:"MultipleVpTokenDCQL"}],title:"VpToken"}},title:"AuthorizationResponsePayload"},vp_token:{type:"array",items:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"},{type:"array",items:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"}]},title:"MultipleVpTokens"},{type:"object",additionalProperties:{type:"array",items:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"}]},title:"MultipleVpTokens"},title:"MultipleVpTokenDCQL"}],title:"VpToken"}},credential_claims_deserialized:{type:"array",items:{type:"object",additionalProperties:!0},description:"All the credentials received deserialized to JSON part of an array. Meaning (SD-)JWTs are represented as JSON object. The same for Mdos. For the latter different implementers of RP Agents could use different methods unfortunately, so there is no stability guarantee to find certain claims in the exact same spot, or even with the exact same keys between different RP agent implementations!"}},title:"VerifiedData"}},title:"AuthorizationStatusResponse"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{type:"object",description:"Error details returned when an operation fails",properties:{status:{type:"integer",description:"HTTP status code",example:500},message:{type:"string",description:"Human-readable error message",example:"Could not verify auth status"},error_details:{type:"string",description:"Additional error details or stack trace when available"}},required:["status","message"],title:"Error"}}}},404:{description:"Query Id or other param not configured/found on the RP agent side",content:{"application/json":{schema:{type:"object",description:"Error details returned when an operation fails",properties:{status:{type:"integer",description:"HTTP status code",example:500},message:{type:"string",description:"Human-readable error message",example:"Could not verify auth status"},error_details:{type:"string",description:"Additional error details or stack trace when available"}},required:["status","message"],title:"Error"}}}},500:{description:"Error creating authorization request",content:{"application/json":{schema:{type:"object",description:"Error details returned when an operation fails",properties:{status:{type:"integer",description:"HTTP status code",example:500},message:{type:"string",description:"Human-readable error message",example:"Could not verify auth status"},error_details:{type:"string",description:"Additional error details or stack trace when available"}},required:["status","message"],title:"Error"}}}}}})]})}function v(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}}}]);