"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[291],{80480:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>_,frontMatter:()=>u,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"openapi/schemas/authorizationstatusrequest","title":"AuthorizationStatusRequest","description":"","source":"@site/docs/openapi/schemas/authorizationstatusrequest.schema.mdx","sourceDirName":"openapi/schemas","slug":"/openapi/schemas/authorizationstatusrequest","permalink":"/universal-oid4vp/docs/openapi/schemas/authorizationstatusrequest","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"authorizationstatusrequest","title":"AuthorizationStatusRequest","description":"","sidebar_label":"AuthorizationStatusRequest","hide_title":true,"hide_table_of_contents":true,"schema":true,"sample":{"correlation_id":"2cc29d1c-7d00-46f8-b0ae-b4779d2ff143","query_id":"PensionSdJwt","verified_data":["vp_token","credentials_deserialized"]},"custom_edit_url":null},"sidebar":"docs","previous":{"title":"CreateAuthorizationRequest","permalink":"/universal-oid4vp/docs/openapi/schemas/createauthorizationrequest"},"next":{"title":"CreateAuthorizationRequestResponse","permalink":"/universal-oid4vp/docs/openapi/schemas/createauthorizationrequestresponse"}}');var a=i(74848),r=i(28453),o=i(95730),n=i.n(o),d=i(9303);const u={id:"authorizationstatusrequest",title:"AuthorizationStatusRequest",description:"",sidebar_label:"AuthorizationStatusRequest",hide_title:!0,hide_table_of_contents:!0,schema:!0,sample:{correlation_id:"2cc29d1c-7d00-46f8-b0ae-b4779d2ff143",query_id:"PensionSdJwt",verified_data:["vp_token","credentials_deserialized"]},custom_edit_url:null},l=void 0,c={},p=[];function h(e){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(d.default,{as:"h1",className:"openapi__heading",children:"AuthorizationStatusRequest"}),"\n",(0,a.jsx)(n(),{schema:{type:"object",required:["correlation_id","query_id"],properties:{correlation_id:{type:"string",description:"Unique identifier for the session",example:"2cc29d1c-7d00-46f8-b0ae-b4779d2ff143"},query_id:{type:"string",description:"Identifier for the presentation definition that specifies which credentials are required",example:"PensionSdJwt"},verified_data:{type:"object",properties:{modes:{type:"array",items:{type:"string",description:"The way verified data will be represented. Either the full Authorization Response, vp_tokens, or claims from digital credentials deserialized into JSON objects. The latter is the most easy representation for external apps integrating with this API as thye do not have to perform additional actions, nor have knowledge about the internal of vp_tokens and auth responses.",enum:["authorization_response","vp_token","credential_claims_deserialized"],title:"VerifiedDataMode"}}},description:"Controls what verified data to include in the response. Only applies when status is 'authorization_response_verified'. Either nothing (omit), or a combination of the vp_tokens and credential data deserialized (credentials_deserialized), depedning on the modes selected",example:["vp_token","credentials_deserialized"]}},title:"AuthorizationStatusRequest"},schemaType:"response"})]})}function _(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h()}}}]);